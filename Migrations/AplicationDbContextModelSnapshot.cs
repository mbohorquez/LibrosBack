// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservasCore6.Data;

#nullable disable

namespace ReservasCore6.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReservasCore6.Models.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAutor"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAutor");

                    b.ToTable("Autor");

                    b.HasData(
                        new
                        {
                            IdAutor = 1,
                            Apellidos = "Apellido 1",
                            Nombre = "Nombre 1"
                        },
                        new
                        {
                            IdAutor = 2,
                            Apellidos = "Apellido 2",
                            Nombre = "Nombre 2"
                        },
                        new
                        {
                            IdAutor = 3,
                            Apellidos = "Apellido 3",
                            Nombre = "Nombre 3"
                        },
                        new
                        {
                            IdAutor = 4,
                            Apellidos = "Apellido 4",
                            Nombre = "Nombre 4"
                        },
                        new
                        {
                            IdAutor = 5,
                            Apellidos = "Apellido 5",
                            Nombre = "Nombre 5"
                        });
                });

            modelBuilder.Entity("ReservasCore6.Models.AutoresLibros", b =>
                {
                    b.Property<int>("IdAutor")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdLibro")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdAutor", "IdLibro");

                    b.HasIndex("IdLibro");

                    b.ToTable("AutoresLibros");

                    b.HasData(
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 1
                        },
                        new
                        {
                            IdAutor = 3,
                            IdLibro = 2
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 3
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 4
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 5
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 6
                        },
                        new
                        {
                            IdAutor = 3,
                            IdLibro = 7
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 8
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 9
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 10
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 11
                        },
                        new
                        {
                            IdAutor = 3,
                            IdLibro = 12
                        },
                        new
                        {
                            IdAutor = 4,
                            IdLibro = 13
                        },
                        new
                        {
                            IdAutor = 3,
                            IdLibro = 14
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 15
                        },
                        new
                        {
                            IdAutor = 4,
                            IdLibro = 16
                        },
                        new
                        {
                            IdAutor = 4,
                            IdLibro = 17
                        },
                        new
                        {
                            IdAutor = 3,
                            IdLibro = 18
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 19
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 20
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 21
                        },
                        new
                        {
                            IdAutor = 2,
                            IdLibro = 22
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 23
                        },
                        new
                        {
                            IdAutor = 4,
                            IdLibro = 24
                        },
                        new
                        {
                            IdAutor = 1,
                            IdLibro = 25
                        });
                });

            modelBuilder.Entity("ReservasCore6.Models.Editorial", b =>
                {
                    b.Property<int>("IdEditorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEditorial"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEditorial");

                    b.ToTable("Editorial");

                    b.HasData(
                        new
                        {
                            IdEditorial = 1,
                            Nombre = "Editorial 1",
                            Sede = "Sede 1"
                        },
                        new
                        {
                            IdEditorial = 2,
                            Nombre = "Editorial 2",
                            Sede = "Sede 2"
                        },
                        new
                        {
                            IdEditorial = 3,
                            Nombre = "Editorial 3",
                            Sede = "Sede 3"
                        },
                        new
                        {
                            IdEditorial = 4,
                            Nombre = "Editorial 4",
                            Sede = "Sede 4"
                        },
                        new
                        {
                            IdEditorial = 5,
                            Nombre = "Editorial 5",
                            Sede = "Sede 5"
                        });
                });

            modelBuilder.Entity("ReservasCore6.Models.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLibro"), 1L, 1);

                    b.Property<int?>("IdEditorial")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Npaginas")
                        .HasColumnType("int");

                    b.Property<string>("Sipnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLibro");

                    b.HasIndex("IdEditorial");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            IdLibro = 1,
                            IdEditorial = 1,
                            Npaginas = 29,
                            Sipnosis = "sipnosis libro 1",
                            Titulo = "titulo libro 1"
                        },
                        new
                        {
                            IdLibro = 2,
                            IdEditorial = 1,
                            Npaginas = 11,
                            Sipnosis = "sipnosis libro 2",
                            Titulo = "titulo libro 2"
                        },
                        new
                        {
                            IdLibro = 3,
                            IdEditorial = 1,
                            Npaginas = 69,
                            Sipnosis = "sipnosis libro 3",
                            Titulo = "titulo libro 3"
                        },
                        new
                        {
                            IdLibro = 4,
                            IdEditorial = 1,
                            Npaginas = 36,
                            Sipnosis = "sipnosis libro 4",
                            Titulo = "titulo libro 4"
                        },
                        new
                        {
                            IdLibro = 5,
                            IdEditorial = 1,
                            Npaginas = 33,
                            Sipnosis = "sipnosis libro 5",
                            Titulo = "titulo libro 5"
                        },
                        new
                        {
                            IdLibro = 6,
                            IdEditorial = 2,
                            Npaginas = 17,
                            Sipnosis = "sipnosis libro 1",
                            Titulo = "titulo libro 1"
                        },
                        new
                        {
                            IdLibro = 7,
                            IdEditorial = 2,
                            Npaginas = 64,
                            Sipnosis = "sipnosis libro 2",
                            Titulo = "titulo libro 2"
                        },
                        new
                        {
                            IdLibro = 8,
                            IdEditorial = 2,
                            Npaginas = 32,
                            Sipnosis = "sipnosis libro 3",
                            Titulo = "titulo libro 3"
                        },
                        new
                        {
                            IdLibro = 9,
                            IdEditorial = 2,
                            Npaginas = 48,
                            Sipnosis = "sipnosis libro 4",
                            Titulo = "titulo libro 4"
                        },
                        new
                        {
                            IdLibro = 10,
                            IdEditorial = 2,
                            Npaginas = 89,
                            Sipnosis = "sipnosis libro 5",
                            Titulo = "titulo libro 5"
                        },
                        new
                        {
                            IdLibro = 11,
                            IdEditorial = 3,
                            Npaginas = 76,
                            Sipnosis = "sipnosis libro 1",
                            Titulo = "titulo libro 1"
                        },
                        new
                        {
                            IdLibro = 12,
                            IdEditorial = 3,
                            Npaginas = 28,
                            Sipnosis = "sipnosis libro 2",
                            Titulo = "titulo libro 2"
                        },
                        new
                        {
                            IdLibro = 13,
                            IdEditorial = 3,
                            Npaginas = 6,
                            Sipnosis = "sipnosis libro 3",
                            Titulo = "titulo libro 3"
                        },
                        new
                        {
                            IdLibro = 14,
                            IdEditorial = 3,
                            Npaginas = 24,
                            Sipnosis = "sipnosis libro 4",
                            Titulo = "titulo libro 4"
                        },
                        new
                        {
                            IdLibro = 15,
                            IdEditorial = 3,
                            Npaginas = 93,
                            Sipnosis = "sipnosis libro 5",
                            Titulo = "titulo libro 5"
                        },
                        new
                        {
                            IdLibro = 16,
                            IdEditorial = 4,
                            Npaginas = 52,
                            Sipnosis = "sipnosis libro 1",
                            Titulo = "titulo libro 1"
                        },
                        new
                        {
                            IdLibro = 17,
                            IdEditorial = 4,
                            Npaginas = 46,
                            Sipnosis = "sipnosis libro 2",
                            Titulo = "titulo libro 2"
                        },
                        new
                        {
                            IdLibro = 18,
                            IdEditorial = 4,
                            Npaginas = 70,
                            Sipnosis = "sipnosis libro 3",
                            Titulo = "titulo libro 3"
                        },
                        new
                        {
                            IdLibro = 19,
                            IdEditorial = 4,
                            Npaginas = 53,
                            Sipnosis = "sipnosis libro 4",
                            Titulo = "titulo libro 4"
                        },
                        new
                        {
                            IdLibro = 20,
                            IdEditorial = 4,
                            Npaginas = 40,
                            Sipnosis = "sipnosis libro 5",
                            Titulo = "titulo libro 5"
                        },
                        new
                        {
                            IdLibro = 21,
                            IdEditorial = 5,
                            Npaginas = 18,
                            Sipnosis = "sipnosis libro 1",
                            Titulo = "titulo libro 1"
                        },
                        new
                        {
                            IdLibro = 22,
                            IdEditorial = 5,
                            Npaginas = 47,
                            Sipnosis = "sipnosis libro 2",
                            Titulo = "titulo libro 2"
                        },
                        new
                        {
                            IdLibro = 23,
                            IdEditorial = 5,
                            Npaginas = 81,
                            Sipnosis = "sipnosis libro 3",
                            Titulo = "titulo libro 3"
                        },
                        new
                        {
                            IdLibro = 24,
                            IdEditorial = 5,
                            Npaginas = 33,
                            Sipnosis = "sipnosis libro 4",
                            Titulo = "titulo libro 4"
                        },
                        new
                        {
                            IdLibro = 25,
                            IdEditorial = 5,
                            Npaginas = 59,
                            Sipnosis = "sipnosis libro 5",
                            Titulo = "titulo libro 5"
                        });
                });

            modelBuilder.Entity("ReservasCore6.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Apellidos = "apellido 1",
                            Direccion = "Direccion 1",
                            Email = "1email@dominio.com ",
                            Nombre = "usuario 1",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"
                        },
                        new
                        {
                            IdUsuario = 2,
                            Apellidos = "apellido 2",
                            Direccion = "Direccion 2",
                            Email = "2email@dominio.com ",
                            Nombre = "usuario 2",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"
                        },
                        new
                        {
                            IdUsuario = 3,
                            Apellidos = "apellido 3",
                            Direccion = "Direccion 3",
                            Email = "3email@dominio.com ",
                            Nombre = "usuario 3",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"
                        },
                        new
                        {
                            IdUsuario = 4,
                            Apellidos = "apellido 4",
                            Direccion = "Direccion 4",
                            Email = "4email@dominio.com ",
                            Nombre = "usuario 4",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"
                        },
                        new
                        {
                            IdUsuario = 5,
                            Apellidos = "apellido 5",
                            Direccion = "Direccion 5",
                            Email = "5email@dominio.com ",
                            Nombre = "usuario 5",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"
                        });
                });

            modelBuilder.Entity("ReservasCore6.Models.AutoresLibros", b =>
                {
                    b.HasOne("ReservasCore6.Models.Autor", "Autor")
                        .WithMany("AutoresLibros")
                        .HasForeignKey("IdAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservasCore6.Models.Libro", "Libro")
                        .WithMany("AutoresLibros")
                        .HasForeignKey("IdLibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("ReservasCore6.Models.Libro", b =>
                {
                    b.HasOne("ReservasCore6.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("IdEditorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("ReservasCore6.Models.Autor", b =>
                {
                    b.Navigation("AutoresLibros");
                });

            modelBuilder.Entity("ReservasCore6.Models.Libro", b =>
                {
                    b.Navigation("AutoresLibros");
                });
#pragma warning restore 612, 618
        }
    }
}
